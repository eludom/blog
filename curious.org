#+TITLE: Curious Musings
#+OPTIONS: num:nil toc:nil \n:nil
#+TODO: TODO(t) CANCELLED(c) |  WIP(w) PUBLISHED(p)
#+hugo_base_dir: .
#+hugo_auto_set_lastmod: %Y-%m-%d
#+MACRO instagram @@html:https://www.instagram.com/p/$1

:PROPERTIES:
:EXPORT_HUGO_SECTION:
:END:
* Content
** Blog
 :PROPERTIES:
  :EXPORT_HUGO_SECTION: Blog
  :END:

*** INTRO
  :PROPERTIES:
  :EXPORT_HUGO_SECTION: Blog
  :EXPORT_FILE_NAME: _index
  :END:

The main technology section. Every project starts here, eventually branching off to its own category.

*** PUBLISHED "​Reproducible security analytics?"    :cybersecurity:org:emacs:
:PROPERTIES:
    :EXPORT_HUGO_SECTION: Blog
    :EXPORT_FILE_NAME: reproducable-security-analytics
    :EXPORT_HUGO_PUBLISHDATE: 2020-02-25:
    :END:


I'm looking for repositories of "reproducible security analytics".

As an addict of [[https://www.gnu.org/software/emacs/][Emacs]] [[https://orgmode.org/][Org mode]], one of the papers that got me started
thinking along these lines was [[https://www.jstatsoft.org/article/view/v046i03/v46i03.pdf][A Multi-Language Computing Environment
for Literate Programming and Reproducible Research]]. I realize for most
of the rest of the world this vision is now realized more in things
like Jupyter and Zeppelin notebooks. Your loss :-)

One thing that looks promising is [[https://car.mitre.org/][mitre's cyber analytics
repository]]. Another is [[https://github.com/hunters-forge/mordor][Hunters Forge/Mordor]] I'd be interested in
pointers to more.

*** PUBLISHED "​I'm passionate about..."​                 :Latin:humanity:work:
:PROPERTIES:
    :EXPORT_HUGO_SECTION: Blog
    :EXPORT_FILE_NAME: Im-passionate about
    :EXPORT_HUGO_PUBLISHDATE: 2020-03-09:
    :END:


"I'm passionate about..." I've always hated that phrase. Because I
thought it was fake. I thought it was trendy. I've reflexively reacted
against trendy things for decades. Pet Rocks, Disco, TED talks,
cryptocurrency... But I am coming to see what the phrase is getting
at. And I think I like it.

In a work world where human beings are called "resources", where
intelligent, creative, inquisitive, motivated people are subjected to
management practices derived from 19th century steel mills and
automotive assembly line production, the phrase "I'm passionate
about..." is (can be) an attempt to re-assert humanity.

I've just finished reading [[https://www.amazon.com/Long-Live-Latin-Pleasures-Language/dp/0374284520#ace-8881249860][Long Live Latin: The Pleasures of a Useless
Language]] . For no good reason. Again and again, it raises the question
of what it means to be human: to be joyful, spontaneous, creative,
inquisitive, fulfilled, to discover, to appreciate beauty, music, art,
language, and poetry (yes, I have a liberal arts degree)

I guess if I had to say what I'm passionate about, it's about being
human and treating other people as humans. To put a professional spin
on it "I am passionate about collaborating with technical people to
find creative solutions to important problems."

Go learn a useless language. Climb a mountain and enjoy the
view. Spend time playing games with your family. Be human. Be
passionate. Carpe diem.

*** PUBLISHED Bear attacks, no-win situations and cybersecurity :cybersecurity:bears:
:PROPERTIES:
    :EXPORT_HUGO_SECTION: Blog
    :EXPORT_FILE_NAME: cybersecurity-and-bears
    :EXPORT_HUGO_PUBLISHDATE: 2020-03-19:
    :END:

I spend a good amount of time hiking in Shenandoah National Park and
surrounding areas. I've seen quite a few #bears and I've followed one
down the trail. I've been growled at by a mother bear when I
unknowingly came between her and her cubs. This is going somewhere
related to #cybersecurity. I promise.

You can't outrun a bear. Climbing a tree won't help. If a bear
actually decides to attack you, the odds are not in your favor, but
fortunately they almost never attack. The old joke goes "I don't have
to outrun the bear, I just have to outrun you" because, presumably the
bear will catch your slower partner, stop, and not bother you when you
both decide to run for it in violation of bear encounter best
practices.

This hints at any number of cybersecurity principals:

  - Know your threat model.
  - Know and follow best practices.
  - Don't let fear (or adrenaline) dictate your response.
  - Know and practice situationally appropriate responses (Grizzlies:
    if attacked play dead. Black Bear: if attacked fight for your
    life)
  - Be prepared (bear spray, first aid kit)
  - Practice deterrence (make noise, travel in groups)
  - Prevention costs less than recovery. By far.
  - And, of course, make sure the other guy is an easier target. Run faster if you run. Apply patches, have good backups (Hello, ransomware !), have layers of defense, decoys, monitoring, DLP, practice threat hunting, etc.
     For a decade or so, I've been reflecting on the fact that
    defensive cybersecurity is a loosing igame. The red team
    (attackers) always win. I don't like no-win situations.

There's a lesson here:

    - Don't feed the bears :: They become habituated to humans, loose
         their inhibition, become a nuisance and sometimes have to be
         relocated or killed. Nobody wins.

OK, not that lesson. Lessons like:

    - Follow best practices :: Following best practices CAN help avoid
         problems. Not following best practices WILL invite problems.
    - Have an incident response plan :: If you see a bad thing
         happening, if it is coming straight for you, what do you do?
    - Line up the right resources ::  Do you know how to triage
         wounds? Do you have a cell phone? Are you in range of cell
         towers? If not, do you have a SPOT to call for help? Where is
         the nearest hospital? Are you prepared to shelter in place if
         need be?
    - It's not just you :: Feeding the bears or failing to store food
         properly might result in perfectly good backcountry shelters
         being torn down. And here we are, 20 or so years after it
         became clear that that allowing spoofed packets out of your
         network enables #DDoS #attacks and we *still* do not have
         widespread adoption of reverse path forwarding
         checks. *Please* stop spoofed packets at your border !


So it maybe true that few people win in the face of an actual attack,
but, it turns out, there are still good reasons to play the game.


**** For Further Reading

    - Numbers of bear attacks :: In North America, only 2-5 people are killed annually by bears: https://www.thealaskalife.com/outdoors/bear-attacks-statistic/ vs (Worldwide) 10 killed by sharks, 50,000 by snakes and 725,000 by mosquitos. https://www.statista.com/chart/2203/the-worlds-deadliest-animals/
    - U.S. Forrest Service :: "Be bear aware" https://www.fs.usda.gov/visit/know-before-you-go/bears
    - Internet safety 101 :: "Internet safety 101: 15 tips to keep your kids and family safe online" https://us.norton.com/internetsecurity-kids-safety-stop-stressing-10-internet-safety-rules-to-help-keep-your-family-safe-online.html. Sure they want to sell you antivirus software, but this is generally good advice.
    - Ultimate Guide to Cybersecurity :: "Your Ultimate Guide to Cybersecurity: At Home, at Work, and on the Go." https://www.ibtimes.com/your-ultimate-guide-cybersecurity-home-work-go-2818655. A little more in depth.
    - CIS Critical Controls :: "The Center for Internet Security (CIS) Critical Security Controls" - https://www.cisecurity.org/controls/cis-controls-implementation-groups/ More in depth. For enterprises.


*** WIP Fixing GNU bash associative array insert speed :programming:gnu:linux:
:PROPERTIES:
    :EXPORT_HUGO_SECTION: Blog
    :EXPORT_FILE_NAME: 20200418
    :EXPORT_HUGO_PUBLISHDATE: 2020-04-18:
    :END:

Bash uses linear search to insert values in to associative arrays.
This is all well and good for small numbers of keys.   I was adding
millions[fn:1].    I went poking around the bash source code today
(2020-04-18) to confirm my suspicion and gauge the difficulty of
adding an option to do something more sensible.


#+hugo: more

Here the steps I took and where I might go if I get serious about
fixing the problem:

**** Get the source code


***** Find it
      - find the homepage :: A quick bit of googling lead to the homepage http://savannah.gnu.org/projects/bash/
      - use git :: For a minute it looked like GNU was still stuck in the bad old
        days of having to download a tarball and then apply a series
        of patches, but fortunately, it there is a git repo http://savannah.gnu.org/git/?group=bash
***** Download it
      #+begin_src bash :eval no
git clone https://git.savannah.gnu.org/git/bash.git
      #+end_src
***** Build it

      Bash follows a time honored build convention
      #+begin_src bash :results output :eval no
./configure
make
      #+end_src

***** Analyze it
      - I read the NEWS file for any indication that associative arrays
        has been worked on to speed up associative array
        insert/look-ups.  No indication that they had.
      - I checked the git commit logs, which appear to be meaningful
        after Bash-4.4 patch 19.  Nothing.
      - With judicious use of grep ("grep-find in Emacs") for
        "associative" and "hash_search" it turns out that associative
        array inserts (as all inserts) are done with use of the
        "hash_search" function in =hashlib.c=
      - has_insert() begins as follows:
#+begin_src C
/* Create an entry for STRING, in TABLE.  If the entry already
   exists, then return it (unless the HASH_NOSRCH flag is set). */
BUCKET_CONTENTS *
hash_insert (string, table, flags)
     char *string;
     HASH_TABLE *table;
     int flags;
{
  BUCKET_CONTENTS *item;
  int bucket;
  unsigned int hv;

  if (table == 0)
    table = hash_create (0);

  item = (flags & HASH_NOSRCH) ? (BUCKET_CONTENTS *)NULL
                               : hash_search (string, table, 0);
#+end_src
      - and there it is, the linear search walking the list in
        =hash_search()=
#+begin_src C
/* Return a pointer to the hashed item.  If the HASH_CREATE flag is passed,
   create a new hash table entry for STRING, otherwise return NULL. */
BUCKET_CONTENTS *
hash_search (string, table, flags)
     const char *string;
     HASH_TABLE *table;
     int flags;
{
  BUCKET_CONTENTS *list;
  int bucket;
  unsigned int hv;

  if (table == 0 || ((flags & HASH_CREATE) == 0 && HASH_ENTRIES (table) == 0))
    return (BUCKET_CONTENTS *)NULL;

  bucket = HASH_BUCKET (string, table, hv);

  for (list = table->bucket_array ? table->bucket_array[bucket] : 0; list; list = list->next)
    {
      /* This is the comparison function */
      if (hv == list->khash && STREQ (list->key, string))
        {
          list->times_found++;
          return (list);
        }
    }
#+end_src


***** Next steps
****** TODO Reach out to the maintainers
       see if they would even entertain the idea of a patch
****** TODO Look for appropriate in-memory hash insert/lookup functions
       - btrees ?
****** TODO Code it
****** TODO test it
****** TODO submit patch


*** TODO The journey from CompuServe to now         :history:internet:online:
# :PROPERTIES:
#     :EXPORT_HUGO_SECTION: Blog
#     :EXPORT_FILE_NAME: from-compuserve-to-now
#     :EXPORT_HUGO_PUBLISHDATE: 2020-04-18:
#     :END:

   Perspectives on the growth of "online" communities/my experience

   - Adm3a terminals
   - Vax email
   - CompuServe
   - Usenet
   - CompuServe again
   - The web
   - UUNET

*** TODO Pull in my recent LinkedIn Posts
*** TODO Publish thoughts from my journal

* About George Jones
   :PROPERTIES:
   :EXPORT_HUGO_SECTION: About
   :EXPORT_FILE_NAME: _index
   :EXPORT_HUGO_LAYOUT: single
   :END:

   George Jones is a Christian, husband, father, technical security
   geek etc., backpacker, Latin, Classics, and Philosophy dabbler,
   Emacs Org Mode addict, Cincinnati Reds and Skyline Chili fan.  In
   something like that order.  He tries to combine his passions and
   has thus been know to write Latin entries in Appalachian Trail
   shelter log books ("Via longa sed vita brevis"), and write blog
   posts about the intersection of epistemology and computer security.
   You have a lot of time to think when hiking or stuck at home during
   a pandemic.  Maybe too much :-)

   Professionally George has made a living variously as a programmer,
   systems administrator, network security engineer, open source
   software developer, Internet Standards author (RFC3871), security
   researcher, conference chair (Flocon 2013, 2014), security
   analytics developer and data scientist.  He has been employed
   variously by CompuServe, UUNET, MITRE, Carnegie-Mellon/CERT, Amazon
   and Redjack.  See  https://www.linkedin.com/in/georgemjones/

   He can be reached via email as gmj at pobox dot com

* Curious Musings
:PROPERTIES:
   :EXPORT_HUGO_SECTION: curious
   :EXPORT_FILE_NAME: _index
   :EXPORT_HUGO_LAYOUT: single
   :END:

Curious Musings is a place I put up thoughts on life, family, work,
security, the outdoors, etc.   As someone who started work at
CompuServe, the original walled garden, I am sensitive to my content
remaining free and available.

Curious Musisings is created with [[https://gohugo.io/][Hugo Go]], a free open-source site
generator. It is designed and authored on a free Linux OS using [[https://www.gnu.org/software/emacs/][Emacs]]
[[https://orgmode.org/][org-mode]] and [[https://ox-hugo.scripter.co/][ox-hugo]].  Bandwidth is currently supplied free of charge
by Github.

I am grateful to Josh Rollins for his [[https://joshrollinswrites.com/][TAONAW]] blog which I used as a
model/too for learning Hugo and ox-hugo.  The source can be found
https://github.com/jarss/

** Footnotes

[fn:1] yes, there are many better tools for this job, but not in the constrained environment where this had to run.
